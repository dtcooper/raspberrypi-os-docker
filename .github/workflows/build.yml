name: Build Containers

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '5 0 * * *'

concurrency:
  group: build
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build container
    strategy:
      matrix:
        include:
          -
            baseimage: "debian:bullseye"
            tags: ["latest", "bullseye"]
          -
            baseimage: "python:3.10-bullseye"
            tags: ["python", "python3.10", "python3.10-bullseye"]
    steps:
      -
        name: Set variables
        id: vars
        run: |
          USERNAME="$(echo "$GITHUB_REPOSITORY_OWNER" | tr '[:upper:]' '[:lower:]')"
          echo "::set-output name=repo::ghcr.io/${USERNAME}/raspberrypi-os"
          echo "::set-output name=username::${USERNAME}"
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ steps.vars.outputs.username }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: linux/arm64,linux/arm/v7
          tags: ${{ steps.vars.outputs.repo }}:${{ join(matrix.tags, format(',{0}:', steps.vars.outputs.repo)) }}
          build-args: BASE_CONTAINER=${{ matrix.baseimage }}
          cache-from: type=registry,ref=${{ steps.vars.outputs.repo }}-cache:${{ matrix.tags[0] }}
          cache-to: type=registry,ref=${{ steps.vars.outputs.repo }}-cache:${{ matrix.tags[0] }},mode=max
